// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://localhost:8080/",
        "contact": {
            "name": "API Support",
            "url": "http://localhost:8080/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/posts": {
            "get": {
                "description": "GetPosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "GetPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "페이지 번호",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "페이지 당 게시글 수",
                        "name": "limits",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "게시글 목록",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "인증되지 않은 사용자입니다.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "CreatePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "CreatePost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "제목과 내용",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "게시글이 성공적으로 생성되었습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "제목과 내용을 모두 입력해야 합니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "인증되지 않은 사용자입니다.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "put": {
                "description": "UpdatePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "UpdatePost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "게시글 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "제목과 내용",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "게시글이 성공적으로 수정되었습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "잘못된 입력 값입니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "인증되지 않은 사용자입니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "게시글 수정 권한이 없습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "게시글을 찾을 수 없습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "게시글 수정 중 오류가 발생했습니다.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeletePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "DeletePost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "게시글 ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "게시글이 성공적으로 삭제되었습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "잘못된 게시글 ID입니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "인증되지 않은 사용자입니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "게시글 삭제 권한이 없습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "게시글을 찾을 수 없습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "게시글 삭제 중 오류가 발생했습니다.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/signin": {
            "post": {
                "description": "SignIn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "SignIn",
                "parameters": [
                    {
                        "description": "이메일과 비밀번호",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "로그인에 성공했습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "이메일 형식이 올바르지 않습니다.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "description": "SingUp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "이메일과 비밀번호",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "회원가입에 성공했습니다.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "이메일 형식이 올바르지 않습니다.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.PostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controllers.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Onycom API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
